apply plugin: 'java'

repositories {
	jcenter()
	//mavenCentral()
	maven {
		url "http://www.atilika.org/nexus/content/repositories/atilika"
	}
}

dependencies {
	// For Library
	compile(
		'org.slf4j:slf4j-api:1.7.7'
	)
	testCompile 'junit:junit:4.12'

	// For ParseWikipediaXML
	compile(
		'commons-cli:commons-cli:1.2',
		'commons-lang:commons-lang:2.6',
		'org.atilika.kuromoji:kuromoji:0.7.7',
		'org.msgpack:msgpack:0.6.12',
		'com.googlecode.json-simple:json-simple:1.1',
		'org.javassist:javassist:3.12.1',
		'com.google.guava:guava:15.0',
	)
}

apply plugin: 'application'

task runTestEng {

	def directory = new File("test")
	if( directory.exists() ){
		println "Must have removed 'test' directory."
		System.exit(1)
	}else{
		directory.mkdir()
	}

	def bofwfile="test/bofw"
	def docfile="test/doc"
	def outfile="test/out"

	for(n in 1..10)
	{

		def nthbofwfile="${bofwfile}${n}.txt"
		def nthdocfile="${docfile}${n}.txt"
		def nthoutfile="${outfile}${n}.txt"

		def makebofwfile = "../../share/makeTestBagofwords 100 100 50 100"
		new File(nthbofwfile).text = makebofwfile.execute().text

		def makedocfile = "../../share/makeTestDocuments ${nthbofwfile}"
		new File(nthdocfile).text = makedocfile.execute().text

		task "testEng${n}" (type: JavaExec) {
			main = 'com.github.nishidy.ParseWikipediaXML'
			classpath = sourceSets.main.runtimeClasspath
			args = [
				"-i", nthdocfile,
				"-s", nthoutfile,
				"-d", "../../share/dictionary.msgpack",
			]
		}

	}

	dependsOn << (1..10).collect{ "testEng${it}" }

}

task runTestJap(type: JavaExec) {
	main = 'com.github.nishidy.ParseWikipediaXML'
	classpath = sourceSets.main.runtimeClasspath
	args = [
		"-i", "../../share/jawiki-test-5000",
		"-c", "3",
		"-n", "3",
		"-j",
		"-e",
	]
}

task runTest(dependsOn: [ runTestEng, runTestJap ]) << {
	println "Test done."
}
